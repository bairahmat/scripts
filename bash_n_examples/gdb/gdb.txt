gcc -g3


bt full
set pagination off
set logging on
##set non-stop on
show non-stop
b parse.c:2704
break main
info br
##clear ##delete   #clear breakpoint
run -w -D _FILE_OFFSET_BITS=64 -D _XOPEN_SOURCE=700 -D _GNU_SOURCE -o mount.o -c mount.c

[f][frame]       #actual
step [N]
#while true
#step
[set step-mode]  #no debug line debug
next             #skip function call
until            #skip loop
<finish><fin>    #finish actual function
continue

info stack
up {down}{do}    #move stack trace
info variables
info var
info var "var"
x/x &"var"
info locals
info args         #function "addresses"
p 'parse.c'::var
p 'parse.c'::function
p main::argc
p $               #refer last value
p *$->next        #contents
p 'main.c'::main
p tok->bol
p ::"var"         #force global scope
p var@entry       #for function parameter f(var)
p "DEFINE"
ptype "DEFINE"
ptype "var"
whatis "var"

info types
info address "sym"


info registers
info *$rip
info line 22
info line 'main.c':22

list               #list actual lines (before & after)
list -             #list prev lines

list main
list "sym"

info win
layout src
layout asm
layout regs

layout "winname"
focus "winname"
tui disable enable


##break to scope and add watch to variables
br
watch "var"            #modify watch - when value changed
rwatch "var"           #read watch - when variable read
awatch "var"           #read and write watch
cond "watchnum" "var">="value"   #conditional watch
continue
info br
disable "watchnum"


break func2
commands
    break func1
    continue
end

break func
commands
    watch var
    continue
end


trace
trace "func"
actions [num]
collect "data"
while-stepping 5
end

collect var1,var2
collect $regs $args $locals
(info scope useful)
tstart
tstop
tdump
